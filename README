The program will be able to take input from a file and perform different operations based on 
what the given instruction was. The program will take the hex number and perform the arithmetic 
operations. The output should all be correct and it will also be displaying if there is an overflow.

To run this program, you will have to type: 
1. g++ -c driver.cpp (Ignore the error it will give you)
2. g++ -o calc driver.o 
3. ./calc 
It will display all the information necessary

The working process:
First, the program will use the fstream library to read the file and store the values with the help of a for loop.
Second, the values stored will be converted into uint32_t data type using sstream.
Third, the program reads the opcode and uses a switch statement to find the opcode that needs to be performed. 
The different operations are:
    ADD(S): Adds operand1 and operand2 together and prints out the result
    SUB(S): Subtracts operand1 from operand2 and prints out the result
    AND(S): Performs the bitwise and operation between operand1 and operand2 
    NOT(S): Performs the bitwise not operation for the only provided operand
    ORR(S): Performs the bitwise or operation between operand1 and operand2 
    XOR(S): Performs the bitwise xor operation between operand1 and operand2 
    LSR(S): Performs logical shift right on operand1 and the amount of shift is determined by operand2
    LSL(S): Performs logical shift left on operand1 and the amount of shift is determined by operand2
    ASR(S): Performs arithmetic shift right on operand1 and the amount of shift is determined by operand2
        **NOTE** if there is an S at the end of the opcode, then the n and z flag will be set, otherwise it will not
Fourth, the program uses printf to format and print out the necessary information. 